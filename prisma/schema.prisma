datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?    @map("email_verified")
  image         String?
  password      String?
  role          UserRole     @default(USER)
  accounts      Account[]
  kostSchema    kostSchema[]

  @@map("users")
}

model kostSchema {
  id          String        @id @default(cuid())
  food        String?
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  notes       String?
  day         String?
  ingredients ingredients[]
}

model ingredients {
  id           String      @id @default(cuid())
  ingredient   String?
  amount       String?
  unit         String?
  kostSchema   kostSchema? @relation(fields: [kostSchemaId], references: [id])
  kostSchemaId String?
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  id        String   @id @default(cuid())
  token     String   @unique
  email     String
  expiresAt DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expiresAt DateTime

  @@unique([email, token])
}
